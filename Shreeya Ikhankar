//question one
#include <stdio.h>
#define MAX 100

struct Stack {
    int arr[MAX];
    int top;
};
void initialize(struct Stack* s) {
    s->top = -1;
}

int isEmpty(struct Stack* s) {
    return s->top == -1;
}


int isFull(struct Stack* s) {
    return s->top == MAX - 1;
}


void push(struct Stack* s, int item) {
    if (!isFull(s)) {
        s->arr[++s->top] = item;
    } else {
        printf("Stack overflow\n");
    }
}


int pop(struct Stack* s) {
    if (!isEmpty(s)) {
        return s->arr[s->top--];
    } else {
        printf("Stack underflow\n");
        return -1;
    }
}


void insertAtBottom(struct Stack* s, int item) {
    if (isEmpty(s)) {
        push(s, item);
    } else {
        int temp = pop(s);         
        insertAtBottom(s, item);   
        push(s, temp);             
    }
}


void reverseStack(struct Stack* s) {
    if (!isEmpty(s)) {
        int temp = pop(s);         
        reverseStack(s);           
        insertAtBottom(s, temp);    
    }
}


void printStack(struct Stack* s) {
    for (int i = 0; i <= s->top; i++) {
        printf("%d ", s->arr[i]);
    }
    printf("\n");
}

int main() {
    struct Stack stack;
    initialize(&stack);
    
    
    push(&stack, 1);
    push(&stack, 2);
    push(&stack, 3);
    push(&stack, 4);
    push(&stack, 5);

    
    printf("Original stack: ");
    printStack(&stack);

    
    reverseStack(&stack);

    
    printf("Reversed stack: ");
    printStack(&stack);

    return 0;
}
